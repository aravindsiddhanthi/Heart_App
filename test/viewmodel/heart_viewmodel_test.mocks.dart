// Mocks generated by Mockito 5.4.6 from annotations
// in heart_app/test/viewmodel/heart_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:heart_app/model/heart_state.dart' as _i4;
import 'package:heart_app/services/heart_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [HeartService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHeartService extends _i1.Mock implements _i2.HeartService {
  MockHeartService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double increase(double? currentProgress) =>
      (super.noSuchMethod(
            Invocation.method(#increase, [currentProgress]),
            returnValue: 0.0,
          )
          as double);

  @override
  _i3.Future<void> savestate(double? progress, _i4.HeartStatus? status) =>
      (super.noSuchMethod(
            Invocation.method(#savestate, [progress, status]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<Map<String, dynamic>> loadstate() =>
      (super.noSuchMethod(
            Invocation.method(#loadstate, []),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<void> clearState() =>
      (super.noSuchMethod(
            Invocation.method(#clearState, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
